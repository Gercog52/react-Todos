{"version":3,"sources":["helpers/formHoc.jsx","component/FormInput.jsx","component/Task.jsx","component/FormList.jsx","redux/problem-reducer.js","helpers/selectors.js","component/FormListContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js","component/FormList.module.css"],"names":["FormsControl","props","children","style","meta","error","touched","display","Input","input","nextProps","console","log","React","createElement","tag","Form","reduxForm","form","className","styles","fomsR","onSubmit","handleSubmit","str","items","Field","autoComplete","formInput","placeholder","component","name","FormInput","initialValues","TaskText","data","length","addTaskThink","Task","item","onClick","task","act","deactTask","id","actTask","taskBtn","taskTextAct","taskTextDezebl","text","delTask","delTaskBtn","FormList","tasks","map","key","addTask","btns","fullCarrentItems","info","isData","fullTask","activeTask","completedTask","width","delDeactTask","type","startStore","notAct","full","itemsAct","fullItems","problem_reducer","state","actions","typeTask","filter","taskType","sort","a","b","current","taskSel","compose","connect","nameForm","dispach","reset","d","App","Boolean","window","location","hostname","match","redusers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"81BAEA,IAAMA,EAAe,SAACC,GAClB,OACI,6BACKA,EAAMC,SACP,0BAAMC,MAAQF,EAAMG,KAAKC,OAASJ,EAAMG,KAAKE,QAAW,GAAK,CAAEC,QAAS,SAAxE,uGAeGC,EAVD,SAACP,GAAW,IAChBQ,EAA8BR,EAA9BQ,MAAgBC,GAAcT,EAAvBG,KADQ,YACeH,EADf,mBAEjBE,EAAM,EAAD,GAAKF,EAAME,OAEpB,OADAQ,QAAQC,IAAIF,GAER,kBAAC,EAAiBT,EACbY,IAAMC,cAAN,UAAuBb,EAAMc,KAA7B,KAAwCN,EAAxC,GAAiDC,EAAjD,CAA2DP,MAAMA,IAAO,Q,gBCe/Ea,EAAOC,YAAU,CACnBC,KAAK,aADID,EAXK,SAAChB,GAIf,OAHAU,QAAQC,IACJX,GAGA,0BAAMkB,UAAWC,IAAOC,MAAOC,SAAUrB,EAAMsB,cAC3C,0BAAMJ,UAAWC,IAAOI,IAAKrB,MAAO,CAACI,SAAUN,EAAMwB,OAAU,SAA/D,UACA,kBAACC,EAAA,EAAD,CAAOC,aAAc,MAAOR,UAAWC,IAAOQ,UAAWb,IAAI,QAAQc,YAAa,yBAA0BC,UAAWtB,EAAOuB,KAAM,iBAUjIC,EAjCG,SAAC/B,GAUf,OAAS,6BACD,kBAACe,EAAD,CAAMS,MAAOxB,EAAMwB,MAAOQ,cAAe,CAACC,SAAS,IAAKZ,SATnD,SAACa,GACVxB,QAAQC,IAAIuB,GACe,IAAvBA,EAAKD,SAASE,QAGlBnC,EAAMoC,aAAaF,EAAKD,SAAS,kBCS1BI,EAlBF,SAACrC,GACV,OACI,yBAAKkB,UAAWC,IAAOmB,MACnB,4BAAQC,QAAUvC,EAAMwC,KAAKC,IAAO,WAAMzC,EAAM0C,UAAU1C,EAAMwC,KAAKG,KAAM,WAAM3C,EAAM4C,QAAQ5C,EAAMwC,KAAKG,KAAOzB,UAAWC,IAAO0B,SAAS,0BAAM3C,MAAO,CAACI,QAASN,EAAMwC,KAAKC,IAAO,OAAS,OAE9L,yBAAKvB,UAAWC,IAAO2B,aAAiB9C,EAAMwC,KAAKC,IAAqC,GAA9B,IAAMtB,IAAO4B,iBACnE,8BACK/C,EAAMwC,KAAKQ,OAGpB,yBAAKT,QAAS,WAAMvC,EAAMiD,QAAQjD,EAAMwC,KAAKG,KAAMzB,UAAWC,IAAO+B,YACjE,kCCgCDC,EAxCE,SAACnD,GAOd,IAAIwC,EAAOxC,EAAMoD,MAAMC,KAAI,SAAAf,GAAI,OAAI,kBAAC,EAAD,CAAMM,QAAS5C,EAAM4C,QAASF,UAAW1C,EAAM0C,UACzCF,KAAMF,EAAMgB,IAAKhB,EAAKK,GAAIM,QAASjD,EAAMiD,aAClF,OACI,yBAAK/B,UAAWC,IAAOF,MACnB,kBAAC,EAAD,CAAWO,MAAQxB,EAAMoD,MAAMjB,OAAO,EAAIC,aAAcpC,EAAMoC,aAAcmB,QAASvD,EAAMuD,UAC1Ff,EACD,yBAAKtB,UAAWC,IAAOqC,KAAMtD,MAAO,CAACI,UAAUN,EAAMyD,iBAAiB,IAAM,SACxE,yBAAKvC,UAAWC,IAAOuC,MAClB1D,EAAMwB,MADX,eAGA,6BACI,4BAAQN,UAA6B,SAAjBlB,EAAM2D,OAAqBxC,IAAOsB,IAAM,GAAIF,QAASvC,EAAM4D,UAA/E,OAGA,4BAAQrB,QAASvC,EAAM6D,YAAvB,UAGA,4BAAQtB,QAASvC,EAAM8D,eAAvB,cAIJ,yBAAK5D,MAAO,CAAC6D,MAAM,UACf,4BAAQ7D,MAAO,CAAEI,QAAYN,EAAMyD,iBAAiBzD,EAAMwB,MAAQ,EAAe,GAAT,QAAce,QAASvC,EAAMgE,cACjG,sD,ykBClCxB,IAoDaT,EAAU,SAACP,GACpB,MAAO,CACHiB,KAtDS,WAuDTzB,KAAM,CACFQ,OACAP,KAAK,KAYXyB,EAAa,CACfhC,KAAM,CACFO,IAAK,CACD,CAACE,GAAI,EAAGK,KAAM,QAASP,KAAK,GAC5B,CAACE,GAAI,EAAGK,KAAM,SAAUP,KAAK,IAEjC0B,OAAQ,CACJ,CAACxB,GAAI,EAAGK,KAAM,SAAUP,KAAK,IAEjC2B,KAAM,CACF,CAACzB,GAAI,EAAGK,KAAM,QAASP,KAAK,GAC5B,CAACE,GAAI,EAAGK,KAAM,SAAUP,KAAK,GAC7B,CAACE,GAAI,EAAGK,KAAM,SAAUP,KAAK,KAGrCkB,OAAQ,OACRU,SAAU,EACVC,UAAW,EACXb,iBAAiB,GAgGNc,EA7FS,WAAkC,IAAjCC,EAAgC,uDAAxBN,EAAYO,EAAY,uCACrD,OAAQA,EAAQR,MACZ,IAvFU,YAwFN,IAAIS,GAAW,EAEf,OADAhE,QAAQC,IAAI6D,GACL,KACAA,EADP,CAEItC,KAAK,KACEsC,EAAMtC,KADT,CAEAkC,KAAMI,EAAMtC,KAAKkC,KAAKO,QAAO,SAAArC,GACzB,OAAIA,EAAKK,KAAK8B,EAAQ9B,KAGlB+B,EAAWpC,EAAKG,KACT,MAGf0B,OAAUO,EAELF,EAAMtC,KAAKiC,OAFMK,EAAMtC,KAAKiC,OAAOQ,QAAO,SAAArC,GAC3C,OAAOA,EAAKK,KAAO8B,EAAQ9B,MAE/BF,IAAMiC,EAAYF,EAAMtC,KAAKO,IAAIkC,QAAO,SAAArC,GACpC,OAAOA,EAAKK,KAAO8B,EAAQ9B,MAC1B6B,EAAMtC,KAAKO,MAEpBgB,iBAAkBe,EAAMf,iBAAmB,EAC3CY,SAAWK,EAAYF,EAAMH,SAAW,EAAIG,EAAMH,WAI1D,IAvHS,WAwHL,OAAO,KACAG,EADP,CAEItC,KAAK,KACEsC,EAAMtC,KADT,CAEAO,IAAI,GAAD,mBAAM+B,EAAMtC,KAAKO,KAAjB,IAAuBE,GAAI6B,EAAMF,UAAa,GAAMG,EAAQjC,QAC/D4B,KAAK,GAAD,mBAAMI,EAAMtC,KAAKkC,MAAjB,IAAwBzB,GAAI6B,EAAMF,UAAY,GAAMG,EAAQjC,UAEpE6B,SAAUG,EAAMH,SAAS,EACzBC,UAAWE,EAAMF,UAAW,EAC5Bb,iBAAkBe,EAAMf,iBAAiB,IAEjD,IAlIc,gBAmIV,OAAO,KACAe,EADP,CAEIb,OAAQc,EAAQG,WAExB,IAtIS,WA0IL,OAHAlE,QAAQC,IAAR,KACQ6D,EAAMtC,KAAKiC,OAAOQ,QAAO,SAAArC,GAAI,OAAIA,EAAKK,KAAK8B,EAAQ9B,MAAI,GAD/D,CACkEF,KAAI,KAE/D,KACA+B,EADP,CAEItC,KAAM,CACFkC,KAAK,YAAKI,EAAMtC,KAAKkC,KAAKf,KAAI,SAAAf,GAAI,OAAKA,EAAKK,KAAO8B,EAAQ9B,GAArB,KAA+BL,EAA/B,CAAqCG,KAAI,IAAQH,MACvFG,IAAK,sBAAI+B,EAAMtC,KAAKO,KAAf,MAAuB+B,EAAMtC,KAAKiC,OAAOQ,QAAO,SAAArC,GAAI,OAAIA,EAAKK,KAAK8B,EAAQ9B,MAAI,GAA9E,CAAiFF,KAAI,MAAOoC,MAAK,SAACC,EAAEC,GAAH,OAAUA,EAAEpC,GAAGmC,EAAEnC,MACvHwB,OAAQK,EAAMtC,KAAKiC,OAAOQ,QAAO,SAAArC,GAAI,OAAKA,EAAKK,KAAO8B,EAAQ9B,OAElE0B,SAAUG,EAAMH,SAAW,IAEnC,IAlJW,aAmJP,OAAO,KACAG,EADP,CAEItC,KAAM,CACFkC,KAAK,YAAKI,EAAMtC,KAAKkC,KAAKf,KAAI,SAAAf,GAAI,OAAKA,EAAKK,KAAO8B,EAAQ9B,GAArB,KAA+BL,EAA/B,CAAqCG,KAAI,IAASH,MACxF6B,OAAQ,sBAAIK,EAAMtC,KAAKiC,QAAf,MAA0BK,EAAMtC,KAAKO,IAAIkC,QAAO,SAAArC,GAAI,OAAIA,EAAKK,KAAK8B,EAAQ9B,MAAI,GAA9E,CAAiFF,KAAI,MAAQoC,MAAK,SAACC,EAAEC,GAAH,OAAUA,EAAEpC,GAAGmC,EAAEnC,MAC3HF,IAAK+B,EAAMtC,KAAKO,IAAIkC,QAAO,SAAArC,GAAI,OAAKA,EAAKK,KAAO8B,EAAQ9B,OAE5D0B,SAAUG,EAAMH,SAAW,IAEnC,IA3Je,iBA4JX,IAAIW,EAAUR,EAAMf,iBACpB,OAAO,KACAe,EADP,CAEItC,KAAK,KACEsC,EAAMtC,KADT,CAEAiC,OAAO,GACPC,KAAMI,EAAMtC,KAAKkC,KAAKO,QAAO,SAAArC,GACzB,QAAIA,EAAKG,QAGHuC,GACK,QAInBvB,iBAAkBuB,IAE1B,QACI,OAAOR,ICpLNS,EAAU,SAACT,GACpB,OAAOA,EAAMhC,MC+BF0C,cACXC,aAAQ,SAACX,GACL,MAAO,CACHtC,KAAK+C,EAAQT,GAAOtC,KACpByB,OAAOsB,EAAQT,GAAOb,OACtBU,SAASY,EAAQT,GAAOH,SACxBZ,iBAAkBwB,EAAQT,GAAOf,oBAEtC,CACKF,UACAnB,aFqBgB,SAACY,EAAMoC,GAC/B,OAAO,SAACC,GACJA,EAAQ9B,EAAQP,IAChBqC,EAAQC,YAAMF,MEvBVxB,SFRY,WACpB,MAAO,CACHK,KAlCc,gBAmCdW,SAAU,SEMNf,WFHc,SAAC0B,GACvB,MAAO,CACHtB,KAxCc,gBAyCdW,SAAU,QECNd,cFEiB,WACzB,MAAO,CACHG,KA9Cc,gBA+CdW,SAAU,aEJNhC,QFxBW,SAACD,GACpB,MAAO,CACHsB,KApBS,WAqBTtB,OEsBID,UFnBa,SAACC,GACtB,MAAO,CACHsB,KAzBW,aA0BXtB,OEiBIqB,aFvCiB,WACzB,MAAO,CACHC,KALe,mBE2CXhB,QFlCW,SAACN,GACpB,MAAO,CACHsB,KAVU,YAWVtB,SEcOuC,EAhBW,SAAClF,GAEvB,IAAIoD,EAA0B,SAAjBpD,EAAM2D,OAAqB3D,EAAMkC,KAAKkC,KAAyB,QAAjBpE,EAAM2D,OAC7D3D,EAAMkC,KAAKO,IAAMzC,EAAMkC,KAAKiC,OAChC,OACI,6BACI,kBAAC,EAAD,CAAU/B,aAAcpC,EAAMoC,aAAcmB,QAASvD,EAAMuD,QAASH,MAAOA,EACjEQ,SAAU5D,EAAM4D,SAAUC,WAAY7D,EAAM6D,WAAYC,cAAe9D,EAAM8D,cAC7ElB,QAAS5C,EAAM4C,QAASF,UAAW1C,EAAM0C,UAAWlB,MAAOxB,EAAMqE,SACjEL,aAAchE,EAAMgE,aAAcL,OAAQ3D,EAAM2D,OAChDF,iBAAkBzD,EAAMyD,iBAAkBR,QAASjD,EAAMiD,cCXhEuC,MAXf,WACE,OACE,6BACI,wBAAItE,UAAW,QAAf,SAGA,kBAAC,EAAD,QCEYuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCbAC,EAAWC,YAAiB,CAC9BvD,KAAK+B,EACLtD,KAAK+E,MAEHC,EAAmBP,OAAOQ,sCAAwChB,IAGzDiB,EAFDC,YAAYN,EAAUG,EAAiBI,YAAgBC,OCHrEZ,OAAOlB,MAAQ2B,EAEfI,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEHM,SAASC,eAAe,SFoHvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBGlInBC,EAAOC,QAAU,CAAC,UAAY,4BAA4B,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,sBAAsB,MAAQ,wBAAwB,WAAa,6BAA6B,IAAM,sBAAsB,QAAU,0BAA0B,YAAc,8BAA8B,eAAiB,oC","file":"static/js/main.ee22b1de.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FormsControl = (props) => {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n            <span style={(props.meta.error && props.meta.touched) ? {} : { display: 'none' }}>Обязательное поле</span>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst Input = (props) => {\r\n    let { input, meta, ...nextProps } = props;\r\n    let style={...props.style};\r\n    console.log(nextProps)\r\n    return (\r\n        <FormsControl {...props}>\r\n            {React.createElement(`${props.tag}`, {...input,...nextProps,style:style},null)}\r\n        </FormsControl>\r\n    )\r\n}\r\nexport default Input","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Input from \"../helpers/formHoc\";\r\nimport styles from './FormList.module.css';\r\n\r\nconst FormInput = (props) => {\r\n\r\n    let submit = (data) => {\r\n        console.log(data);\r\n        if (data.TaskText.length===0) {\r\n            return\r\n        }\r\n        props.addTaskThink(data.TaskText,'inputTask')\r\n    };\r\n\r\n    return ( <div>\r\n            <Form items={props.items} initialValues={{TaskText:''}} onSubmit={submit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst FormRedax = (props) => {\r\n    console.log(\r\n        props\r\n    )\r\n    return (\r\n        <form className={styles.fomsR} onSubmit={props.handleSubmit}>\r\n            <span className={styles.str} style={{display:(!props.items) && 'none' }}>❯</span>\r\n            <Field autoComplete={'off'} className={styles.formInput} tag='input' placeholder={'What needs to be done?'} component={Input} name={'TaskText'} />\r\n        </form>\r\n    )\r\n}\r\nconst Form = reduxForm({\r\n    form:'inputTask'\r\n})(FormRedax);\r\n\r\n\r\n\r\nexport default FormInput","import React from 'react';\r\nimport styles from \"./FormList.module.css\";\r\n\r\nconst Task = (props) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <button onClick={(props.task.act) ? ()=> {props.deactTask(props.task.id)} :()=> {props.actTask(props.task.id)}}  className={styles.taskBtn}><span style={{display:(props.task.act) ? 'none' : ''}}>\r\n            </span></button>\r\n            <div className={styles.taskTextAct + ((!props.task.act) ? ' ' + styles.taskTextDezebl : '')}>\r\n                <span>\r\n                    {props.task.text}\r\n                </span>\r\n            </div>\r\n            <div onClick={()=> {props.delTask(props.task.id)}} className={styles.delTaskBtn}>\r\n                <span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import React from 'react'\r\nimport FormInput from \"./FormInput\";\r\nimport styles from './FormList.module.css'\r\nimport Task from \"./Task\";\r\n\r\n\r\nconst FormList = (props) => {\r\n    /**\r\n     * <div className={styles.item} key={item.id}>\r\n     {item.text}\r\n     </div>\r\n     * */\r\n\r\n    let task = props.tasks.map(item => <Task actTask={props.actTask} deactTask={props.deactTask}\r\n                                             task={item} key={item.id} delTask={props.delTask}/> );\r\n    return (\r\n        <div className={styles.form}>\r\n            <FormInput items={(props.tasks.length>0)} addTaskThink={props.addTaskThink} addTask={props.addTask} />\r\n            {task}\r\n            <div className={styles.btns} style={{display:!(props.fullCarrentItems>0) && 'none' }}>\r\n                <div className={styles.info}>\r\n                    {props.items} items left\r\n                </div>\r\n                <div>\r\n                    <button className={(props.isData === 'Full') ? styles.act : ''} onClick={props.fullTask}>\r\n                        all\r\n                    </button>\r\n                    <button onClick={props.activeTask}>\r\n                        active\r\n                    </button>\r\n                    <button onClick={props.completedTask}>\r\n                        complited\r\n                    </button>\r\n                </div>\r\n                <div style={{width:'116px'}}>\r\n                    <button style={{ display: (!(props.fullCarrentItems-props.items > 0)) ? 'none' : ''}} onClick={props.delDeactTask}>\r\n                        <span>\r\n                            Clear completed\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FormList;","import {reset} from 'redux-form'\r\n\r\nconst NEW_TASK = 'NEW_TASK';\r\nconst SET_TYPE_TASK = 'SET_TYPE_TASK';\r\nconst ACT_TASK = 'ACT_TASK';\r\nconst DEACT_TASK = 'DEACT_TASK';\r\nconst DEL_DEACT_TASK = 'DEL_DEACT_TASK';\r\nconst DELL_TASK = 'DELL_TASK';\r\n\r\nexport const  delDeactTask = () => {\r\n    return {\r\n        type: DEL_DEACT_TASK,\r\n    }\r\n};\r\n\r\nexport const delTask = (id) => {\r\n    return {\r\n        type:DELL_TASK,\r\n        id,\r\n    }\r\n}\r\n\r\nexport const actTask = (id) => {\r\n    return {\r\n        type: ACT_TASK,\r\n        id,\r\n    }\r\n};\r\nexport const deactTask = (id) => {\r\n    return {\r\n        type: DEACT_TASK,\r\n        id,\r\n    }\r\n};\r\n\r\nexport const fullTask = () => {\r\n    return {\r\n        type: SET_TYPE_TASK,\r\n        taskType: 'Full',\r\n    }\r\n};\r\nexport const activeTask = (d) => {\r\n    return {\r\n        type: SET_TYPE_TASK,\r\n        taskType: 'Act',\r\n    }\r\n};\r\nexport const completedTask = () => {\r\n    return {\r\n        type: SET_TYPE_TASK,\r\n        taskType: 'Complete',\r\n    }\r\n};\r\n\r\nexport const addTask = (text) => {\r\n    return {\r\n        type: NEW_TASK,\r\n        task: {\r\n            text,\r\n            act: true,\r\n        }\r\n    }\r\n};\r\nexport const addTaskThink = (text, nameForm) => {\r\n    return (dispach) => {\r\n        dispach(addTask(text));\r\n        dispach(reset(nameForm));\r\n    }\r\n};\r\n\r\n\r\nconst startStore = {\r\n    data: {\r\n        act: [\r\n            {id: 1, text: 'govno', act: true},\r\n            {id: 2, text: 'govno2', act: true},\r\n        ],\r\n        notAct: [\r\n            {id: 3, text: 'govno3', act: false}\r\n        ],\r\n        full: [\r\n            {id: 1, text: 'govno', act: true},\r\n            {id: 2, text: 'govno2', act: true},\r\n            {id: 3, text: 'govno3', act: false},\r\n        ],\r\n    },\r\n    isData: 'Full',\r\n    itemsAct: 2,\r\n    fullItems: 3,// id\r\n    fullCarrentItems:3,\r\n};\r\n\r\nconst problem_reducer = (state = startStore, actions) => {\r\n    switch (actions.type) {\r\n        case DELL_TASK: {\r\n            let typeTask = false;\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    full: state.data.full.filter(item => {\r\n                        if (item.id!==actions.id) {\r\n                            return true\r\n                        } else {\r\n                            typeTask = item.act;\r\n                            return false\r\n                        }\r\n                    }),\r\n                    notAct: (!typeTask) ? state.data.notAct.filter(item => {\r\n                        return item.id !== actions.id;\r\n                    }) : state.data.notAct,\r\n                    act: (typeTask) ? state.data.act.filter(item => {\r\n                        return item.id !== actions.id;\r\n                    }) : state.data.act,\r\n                },\r\n                fullCarrentItems: state.fullCarrentItems - 1,\r\n                itemsAct: (typeTask) ? state.itemsAct - 1 : state.itemsAct,\r\n            }\r\n\r\n        }\r\n        case NEW_TASK:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    act: [...state.data.act, {id: state.fullItems  + 1, ...actions.task}],\r\n                    full: [...state.data.full, {id: state.fullItems + 1, ...actions.task}],\r\n                },\r\n                itemsAct: state.itemsAct+1,\r\n                fullItems: state.fullItems +1,\r\n                fullCarrentItems: state.fullCarrentItems+1,\r\n            };\r\n        case SET_TYPE_TASK:\r\n            return {\r\n                ...state,\r\n                isData: actions.taskType\r\n            };\r\n        case ACT_TASK:\r\n            console.log(\r\n                {...state.data.notAct.filter(item => item.id===actions.id)[0],act:true}\r\n            );\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    full: [...state.data.full.map(item => (item.id === actions.id) ? {...item, act:true} : item)],\r\n                    act: [...state.data.act,{...state.data.notAct.filter(item => item.id===actions.id)[0],act:true}].sort((a,b) => -b.id+a.id),\r\n                    notAct: state.data.notAct.filter(item => (item.id !== actions.id)),\r\n                },\r\n                itemsAct: state.itemsAct + 1,\r\n            };\r\n        case DEACT_TASK:\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    full: [...state.data.full.map(item => (item.id === actions.id) ? {...item, act:false} : item)],\r\n                    notAct: [...state.data.notAct,{...state.data.act.filter(item => item.id===actions.id)[0],act:false}].sort((a,b) => -b.id+a.id),\r\n                    act: state.data.act.filter(item => (item.id !== actions.id)),\r\n                },\r\n                itemsAct: state.itemsAct - 1,\r\n            };\r\n        case DEL_DEACT_TASK:\r\n            let current = state.fullCarrentItems;\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    notAct:[],\r\n                    full: state.data.full.filter(item => {\r\n                        if (item.act) {\r\n                            return true\r\n                        } else {\r\n                            --current;\r\n                            return false\r\n                        }\r\n                    }),\r\n                },\r\n                fullCarrentItems: current,\r\n            };\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\nexport default problem_reducer","export const taskSel = (state) => {\r\n    return state.task\r\n};\r\n","import React from 'react'\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport FormList from \"./FormList\";\r\nimport {\r\n    activeTask,\r\n    actTask,\r\n    addTask,\r\n    addTaskThink,\r\n    completedTask,\r\n    deactTask,\r\n    delDeactTask, delTask,\r\n    fullTask\r\n} from \"../redux/problem-reducer\";\r\nimport {taskSel} from \"../helpers/selectors\";\r\n\r\nconst FormListContainer = (props) => {\r\n\r\n    let tasks = (props.isData === \"Full\") ? props.data.full : (props.isData === 'Act') ?\r\n        props.data.act : props.data.notAct;\r\n    return (\r\n        <div>\r\n            <FormList addTaskThink={props.addTaskThink} addTask={props.addTask} tasks={tasks}\r\n                      fullTask={props.fullTask} activeTask={props.activeTask} completedTask={props.completedTask}\r\n                      actTask={props.actTask} deactTask={props.deactTask} items={props.itemsAct}\r\n                      delDeactTask={props.delDeactTask} isData={props.isData}\r\n                      fullCarrentItems={props.fullCarrentItems} delTask={props.delTask}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose(\r\n    connect((state)=> {\r\n        return {\r\n            data:taskSel(state).data,\r\n            isData:taskSel(state).isData,\r\n            itemsAct:taskSel(state).itemsAct,\r\n            fullCarrentItems: taskSel(state).fullCarrentItems,\r\n        }\r\n    }, {\r\n            addTask,\r\n            addTaskThink,\r\n            fullTask,\r\n            activeTask,\r\n            completedTask,\r\n            actTask,\r\n            deactTask,\r\n            delDeactTask,\r\n            delTask,\r\n    }\r\n        )\r\n)(FormListContainer);","import React from 'react';\nimport './App.css';\nimport FormListContainer from \"./component/FormListContainer\";\n\nfunction App() {\n  return (\n    <div>\n        <h1 className={\"Name\"}>\n            Todos\n        </h1>\n        <FormListContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport problem_reducer from \"./problem-reducer\";\r\n\r\nconst redusers = combineReducers ({\r\n    task:problem_reducer,\r\n    form:formReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nwindow.state = store;\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"FormList_formInput__1rNF-\",\"item\":\"FormList_item__1MdTD\",\"btns\":\"FormList_btns__3nRRa\",\"info\":\"FormList_info__3DbmO\",\"form\":\"FormList_form__N8ZRb\",\"str\":\"FormList_str__1IU0e\",\"fomsR\":\"FormList_fomsR__1vDP2\",\"delTaskBtn\":\"FormList_delTaskBtn__3BeH9\",\"act\":\"FormList_act__2kd1A\",\"taskBtn\":\"FormList_taskBtn__3vJ0E\",\"taskTextAct\":\"FormList_taskTextAct__3qauo\",\"taskTextDezebl\":\"FormList_taskTextDezebl__3lSn6\"};"],"sourceRoot":""}